# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type citiesDto {
  id: Float
  name: String
  countrie: countrieDto
}

input CommerceInput {
  id: Float
  name_owner: String!
  identity: String!
  url_doc_identity: String!
  state: Boolean!
  userId: Float!
}

type CommerceOut {
  id: ID!
  name_owner: String
  identity: String
  url_doc_identity: String
  state: Boolean
  user: CreateUserDto
}

type CommerceResponse {
  data: CommerceOut
  error: ErrorResponse
}

type CommercesOut {
  id: Int!
  name_owner: String!
  identity: String!
  url_doc_identity: String!
  state: Boolean!
}

type countrieDto {
  id: Float
  iso: String
  name: String
  nicename: String
  iso3: String
  numcode: Float
  phonecode: Float
}

type CreateUserDto {
  id: Int!
  firstname: String!
  lastname: String!
  email: String!
  user: String!
  password: String!
  sponsor_id: Int
  phone: String!
  address: String
  create_at: DateTime
  countrie: countrieDto
  city: citiesDto
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type ErrorResponse {
  message: String!
  status: Float!
  ok: Boolean!
}

type Mutation {
  createUser(input: UserInput!): CreateUserDto!
  updateUser(input: UserInput!): CreateUserDto!
  deleteUser(id: Float!): String!
  createCommerce(input: CommerceInput!): CommerceResponse!
  updateCommerce(input: CommerceInput!): CommerceResponse!
  signin(input: signInDto!): ResponseSignIn!
  signup(input: signUpDto!): ResponseSignIn!
  send_code(sendcode: twilioDto!): ErrorResponse!
  verify_code(verifycode: twilioDto!): ErrorResponse!
  reset_password(email: String!): ErrorResponse!
}

type Query {
  users: [CreateUserDto!]!
  countries: [countrieDto!]!
  searchCountrie(id: Float!): countrieDto!
  cities: [citiesDto!]!
  searchCity(id: Float!): citiesDto!
  commerce: [CommerceOut!]!
  commerceById(id: Float!): CommerceOut!
}

type ResponseSignIn {
  data: SignInResponse
  error: ErrorResponse
}

input signInDto {
  email: String!
  password: String!
}

type SignInResponse {
  token: String
  firstname: String
  lastname: String
  username: String
  email: String
  phone_number: String
}

input signUpDto {
  firstname: String!
  lastname: String!
  email: String!
  user: String!
  password: String!
  sponsor_id: Float
  address: String!
  phone: String!
  create_at: DateTime!
  country_id: Float!
  city_id: Float!
}

input twilioDto {
  phone_number: String!
  channel: String
  code: String
}

input UserInput {
  id: ID
  firstname: String
  lastname: String
  email: String
  user: String
  password: String
  sponsor_id: Float
  address: String
  phone: String
  create_at: DateTime
  country_id: Float!
  city_id: Float!
}
